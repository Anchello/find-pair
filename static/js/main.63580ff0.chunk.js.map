{"version":3,"sources":["constants/index.js","reducers/timer.js","reducers/helpers.js","reducers/cards.js","reducers/index.js","components/Timer.js","containers/TimerContainer.js","actions/index.js","components/Card.js","components/Cards.js","containers/CardsContainer.js","containers/GameContainer.js","components/Modal.js","components/Intro.js","data/playing-cards.js","components/Result.js","containers/ResultContainer.js","containers/Routing.js","components/Header.js","containers/App.js","index.js"],"names":["ActionTypes","GameOptions","countPair","totalCountCards","COUNT_PAIR","delayClosingPair","delayClosingCard","InitialState","timer","cards","visibleCounts","total","isOpened","state","action","type","getNewOpenedCards","actionId","filter","card","id","map","name","getReceivedTotalCards","isClosed","isHidden","setOpenedCards","setClosedCards","setHiddenCards","combineReducers","addZero","num","isFinishing","remainingTime","Timer","isFinish","timerValue","min","Math","trunc","sec","getTimerValue","className","classNames","defaultProps","connect","dispatch","tick","useEffect","interval","setInterval","clearInterval","Card","onClick","imgSrc","style","backgroundImage","process","Cards","key","countIsOpened","length","open","openCard","close","hide","handleClick","useCallback","isMatchingCards","first","second","number","suit","delayClosing","getDelayClosingCard","setTimeout","clearTimeout","history","useHistory","push","Modal","children","title","useState","isOpen","setIsOpen","handleClose","Intro","role","aria-label","to","pathname","numbers","suits","getRandomCards","forEach","getPlayingCards","newCards","randomCard","floor","random","includes","getNewCards","sort","getShuffleCards","index","Result","isWin","reset","resetGame","useMemo","store","createStore","Routing","hashType","exact","path","component","GameContainer","ResultContainer","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63580ff0.chunk.js","sourcesContent":["export const ActionTypes = {\n  START_TIMER: 'START_TIMER',\n  STOP_TIMER: 'STOP_TIMER',\n  OPEN_CARD: 'OPEN_CARD',\n  CLOSE_CARD: 'CLOSE_CARD',\n  HIDE_CARD: 'HIDE_CARD',\n  RECEIVE_CARDS: 'RECEIVE_CARDS',\n  RESET: 'RESET',\n};\n\nconst COUNT_PAIR = 18;\nexport const COUNT_CARDS_IN_PAIR = 2;\nexport const COUNT_ONE_CARD = 1;\nexport const MS_IN_ONE_MIN = 1000;\n\nexport const INDEX = '/';\nexport const GAME = '/game';\nexport const RESULT = '/result';\n\nexport const GameOptions = {\n  countPair: COUNT_PAIR,\n  totalCountCards: COUNT_PAIR * COUNT_CARDS_IN_PAIR,\n  delayClosingPair: 1000,\n  delayClosingCard: 5000,\n};\n\nexport const InitialState = {\n  timer: 300,\n  cards: {\n    visibleCounts: GameOptions.totalCountCards,\n    total: [],\n    isOpened: [],\n  },\n};\n","import { InitialState, ActionTypes } from '../constants';\n\nconst timer = (state = InitialState.timer, action) => {\n  switch (action.type) {\n    case ActionTypes.START_TIMER:\n      return state - 1;\n    case ActionTypes.RESET:\n      return InitialState.timer;\n    default:\n      return state;\n  }\n};\n\nexport default timer;\n","export const getNewOpenedCards = (total, actionId) => total.filter((card) => (card.id === actionId))\n  .map((card) => ({ id: card.id, name: card.name }));\n\nexport const getReceivedTotalCards = (cards) => cards.map((card) => ({\n  ...card,\n  isClosed: true,\n  isHidden: false,\n}));\n\nexport const setOpenedCards = (total, actionId) => total.map((card) => (\n  (card.id === actionId) ? { ...card, isClosed: false } : card));\n\nexport const setClosedCards = (total) => total.map((card) => ((!card.isClosed)\n  ? { ...card, isClosed: true } : card));\n\nexport const setHiddenCards = (total) => total.map((card) => ((!card.isHidden && !card.isClosed)\n  ? { ...card, isHidden: true } : card));\n","import {\n  getNewOpenedCards, getReceivedTotalCards, setOpenedCards, setClosedCards,\n  setHiddenCards,\n} from './helpers';\nimport { InitialState, ActionTypes, COUNT_CARDS_IN_PAIR } from '../constants';\n\nconst cards = (state = InitialState.cards, action) => {\n  switch (action.type) {\n    case ActionTypes.OPEN_CARD:\n      return {\n        ...state,\n        isOpened: [...state.isOpened, ...getNewOpenedCards(state.total, action.id)],\n        total: setOpenedCards(state.total, action.id),\n      };\n    case ActionTypes.CLOSE_CARD:\n      return {\n        ...state,\n        isOpened: [],\n        total: setClosedCards(state.total),\n      };\n    case ActionTypes.HIDE_CARD:\n      return {\n        ...state,\n        isOpened: [],\n        visibleCounts: state.visibleCounts - COUNT_CARDS_IN_PAIR,\n        total: setHiddenCards(state.total),\n      };\n    case ActionTypes.RECEIVE_CARDS:\n      return {\n        ...state,\n        total: getReceivedTotalCards(action.cards),\n      };\n    case ActionTypes.RESET:\n      return {\n        ...InitialState.cards,\n        total: getReceivedTotalCards(action.cards),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cards;\n","import { combineReducers } from 'redux';\nimport timer from './timer';\nimport cards from './cards';\n\nexport default combineReducers({\n  timer,\n  cards,\n});\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './Timer.scss';\n\nconst addZero = (num) => ((num < 10) ? `0${num}` : num);\n\nconst getTimerValue = (remainingTime) => {\n  const SECS_IN_ONE_MIN = 60;\n  return {\n    min: addZero(Math.trunc(remainingTime / SECS_IN_ONE_MIN)),\n    sec: addZero(remainingTime % SECS_IN_ONE_MIN),\n  };\n};\n\nconst isFinishing = (remainingTime) => remainingTime && remainingTime < 30;\n\nconst Timer = ({ remainingTime, isFinish }) => {\n  const timerValue = getTimerValue(remainingTime);\n  return (\n    <div className={classNames('timer', {\n      'timer--is-finishing': isFinishing(remainingTime),\n      'timer--is-finished': isFinish,\n    })}\n    >\n      <span className=\"timer__value\">\n        {timerValue.min}\n      </span>\n      <span className=\"timer__dots\">:</span>\n      <span className=\"timer__value\">{timerValue.sec}</span>\n    </div>\n  );\n};\n\nTimer.defaultProps = {\n  remainingTime: 0,\n};\n\n\nTimer.propTypes = {\n  remainingTime: PropTypes.number,\n  isFinish: PropTypes.bool.isRequired,\n};\n\nexport default Timer;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Timer from '../components/Timer';\nimport { startTimer } from '../actions';\nimport { MS_IN_ONE_MIN } from '../constants';\n\nconst TimerContainer = ({\n  remainingTime, tick, isFinish,\n}) => {\n  useEffect(() => {\n    let interval = null;\n    if (!isFinish) {\n      interval = setInterval(tick, MS_IN_ONE_MIN);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [tick, isFinish]);\n  return (\n    <Timer remainingTime={remainingTime} isFinish={isFinish} />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  remainingTime: state.timer,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  tick: () => dispatch(startTimer()),\n});\n\nTimerContainer.propTypes = {\n  remainingTime: PropTypes.number.isRequired,\n  tick: PropTypes.func.isRequired,\n  isFinish: PropTypes.bool.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TimerContainer);\n","import { ActionTypes } from '../constants';\n\nexport const startTimer = () => ({\n  type: ActionTypes.START_TIMER,\n});\n\nexport const openCard = (id, name) => ({\n  type: ActionTypes.OPEN_CARD,\n  id,\n  name,\n});\n\nexport const closeCard = () => ({\n  type: ActionTypes.CLOSE_CARD,\n});\n\nexport const hideCard = () => ({\n  type: ActionTypes.HIDE_CARD,\n});\n\nexport const receiveCards = (cards) => ({\n  type: ActionTypes.RECEIVE_CARDS,\n  cards,\n});\n\nexport const resetGame = (cards) => ({\n  type: ActionTypes.RESET,\n  cards,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './Card.scss';\n\nconst Card = ({\n  onClick, isClosed, isHidden, imgSrc,\n}) => (\n  <li className={classNames('card', {\n    'card--is-hidden': isHidden,\n    'card--is-opened': !isClosed,\n  })}\n  >\n    <button\n      type=\"button\"\n      onClick={onClick}\n      className=\"card__item card__item--back\"\n    />\n    <button\n      type=\"button\"\n      onClick={onClick}\n      className=\"card__item card__item--front\"\n      style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/${imgSrc})` }}\n    />\n  </li>\n);\n\nCard.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  isClosed: PropTypes.bool.isRequired,\n  isHidden: PropTypes.bool.isRequired,\n  imgSrc: PropTypes.string.isRequired,\n};\n\nexport default Card;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from './Card';\nimport './Cards.scss';\n\nconst Cards = ({ cards, onClick }) => (\n  <ul className=\"cards\">\n    {cards.map((card) => (\n      <Card\n        key={card.id}\n        name={card.name}\n        imgSrc={card.imgSrc}\n        isClosed={card.isClosed}\n        isHidden={card.isHidden}\n        onClick={() => onClick(card)}\n      />\n    ))}\n  </ul>\n);\n\nCards.propTypes = {\n  cards: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    isClosed: PropTypes.bool.isRequired,\n    isHidden: PropTypes.bool.isRequired,\n    name: PropTypes.objectOf(PropTypes.string).isRequired,\n    imgSrc: PropTypes.string.isRequired,\n  }).isRequired).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Cards;\n","import React, { useEffect, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { openCard, closeCard, hideCard } from '../actions';\nimport Cards from '../components/Cards';\nimport { GameOptions, COUNT_CARDS_IN_PAIR, COUNT_ONE_CARD } from '../constants';\n\nconst getDelayClosingCard = (countIsOpened) => {\n  switch (countIsOpened) {\n    case COUNT_CARDS_IN_PAIR:\n      return GameOptions.delayClosingPair;\n    case COUNT_ONE_CARD:\n      return GameOptions.delayClosingCard;\n    default:\n      return null;\n  }\n};\n\nconst CardsContainer = ({\n  cards, isOpened, countIsOpened, open, close, hide,\n}) => {\n  const handleClick = useCallback((card) => {\n    if (countIsOpened === COUNT_CARDS_IN_PAIR || !card.isClosed) return;\n    open(card.id, card.name);\n  }, [countIsOpened, open]);\n\n  const isMatchingCards = useCallback(() => {\n    const [first, second] = [isOpened[0], isOpened[1]];\n    return first.name.number === second.name.number && first.name.suit === second.name.suit;\n  }, [isOpened]);\n\n  useEffect(() => {\n    let timer = null;\n    const delayClosing = getDelayClosingCard(countIsOpened);\n    if (delayClosing) {\n      timer = setTimeout(close, delayClosing);\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [countIsOpened, close]);\n\n  useEffect(() => {\n    const isOpenPair = countIsOpened === COUNT_CARDS_IN_PAIR;\n    if (isOpenPair && isMatchingCards()) hide();\n  }, [countIsOpened, hide, isMatchingCards]);\n\n  return (\n    <Cards cards={cards} onClick={handleClick} />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  cards: state.cards.total,\n  isOpened: state.cards.isOpened,\n  countIsOpened: state.cards.isOpened.length,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  open: (id, name) => dispatch(openCard(id, name)),\n  close: () => dispatch(closeCard()),\n  hide: () => dispatch(hideCard()),\n});\n\nCardsContainer.propTypes = {\n  cards: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    isClosed: PropTypes.bool.isRequired,\n    isHidden: PropTypes.bool.isRequired,\n    name: PropTypes.objectOf(PropTypes.string).isRequired,\n    imgSrc: PropTypes.string.isRequired,\n  }).isRequired).isRequired,\n  isOpened: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.objectOf(PropTypes.string).isRequired,\n  }).isRequired).isRequired,\n  countIsOpened: PropTypes.number.isRequired,\n  open: PropTypes.func.isRequired,\n  close: PropTypes.func.isRequired,\n  hide: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(CardsContainer);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport TimerContainer from './TimerContainer';\nimport CardsContainer from './CardsContainer';\nimport { RESULT } from '../constants';\n\nconst GameContainer = ({ isFinish }) => {\n  const history = useHistory();\n\n  useEffect(() => {\n    if (isFinish) history.push(RESULT);\n  }, [isFinish, history]);\n\n  return (\n    <>\n      <TimerContainer isFinish={isFinish} />\n      <CardsContainer />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isFinish: !state.timer || !state.cards.visibleCounts,\n});\n\nGameContainer.propTypes = {\n  isFinish: PropTypes.bool.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(GameContainer);\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Modal.scss';\n\n\nconst Modal = ({ children, title, open }) => {\n  const [isOpen, setIsOpen] = useState(open);\n  const handleClose = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen]);\n  if (!isOpen) return null;\n  return (\n    <div className=\"modal-wrapper\">\n      <div className=\"modal\">\n        <button type=\"button\" className=\"modal__close\" onClick={handleClose}>\n          <span className=\"modal__close-line\" />\n          <span className=\"modal__close-line\" />\n        </button>\n        {title && (\n        <h2 className=\"modal__header\">\n          {title}\n        </h2>\n        )}\n        <div className=\"modal__content\">\n          {children}\n        </div>\n      </div>\n\n    </div>\n  );\n};\n\nModal.defaultProps = {\n\ttitle: '',\n};\n\nModal.propTypes = {\n  children: PropTypes.node.isRequired,\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from './Modal';\nimport { GAME } from '../constants';\nimport './Intro.scss';\n\nconst Intro = () => (\n  <Modal open title=\"Welcome to game 'Find a pair'\">\n    <h3>Rules of the game:</h3>\n    <ul className=\"intro-rules\">\n      <li>On the screen you will see 18 pairs of playing cards face down.</li>\n      <li>You need to find all pairs of cards for a certain time.</li>\n      <li>In order to open a card, click on it.</li>\n      <li>You can open only two cards at a time.</li>\n      <li>\n        After opening one card, you have 5 seconds to open the second card,\n        otherwise the first card automatically will close.\n      </li>\n      <li>If the cards match, then they will be hidden.</li>\n      <li>\n        If the cards don&apos;t match, then they automatically close after 1 second.\n        And only after that you can open the following cards.\n      </li>\n      <li>You cann&apos;t close open cards yourself.</li>\n      <li>\n        If you find all the cards in a certain time, then you will win\n        {' '}\n        <span role=\"img\" aria-label=\"win\">🎉</span>\n        ,\n        if you don&apos;t have time, then you will lose\n        {' '}\n        <span role=\"img\" aria-label=\"lose\">😟</span>\n        .\n      </li>\n    </ul>\n    <Link\n      className=\"button\"\n      to={{\n        pathname: GAME,\n      }}\n    >\n      Start the game\n    </Link>\n  </Modal>\n);\n\nexport default Intro;\n","import { GameOptions } from '../constants';\n\nconst numbers = ['ace', 'king', 'queen', 'jack', 'ten', 'nine', 'eight', 'seven', 'six'];\nconst suits = ['heart', 'diamond', 'spades', 'club'];\n\nconst getPlayingCards = () => {\n  const cards = [];\n  suits.forEach((suit) => {\n    numbers.forEach((number) => cards.push({\n      imgSrc: `media/cards/${number}_${suit}.png`,\n      name: {\n        number,\n        suit,\n      },\n    }));\n    return cards;\n  });\n  return cards;\n};\n\nconst getShuffleCards = (cards) => cards.sort(() => Math.random() - 0.5);\n\nconst getNewCards = (cards) => {\n  const newCards = [];\n  while (newCards.length < GameOptions.countPair) {\n    const randomCard = cards[Math.floor(Math.random() * cards.length)];\n    if (!newCards.includes(randomCard)) newCards.push(randomCard);\n  }\n  return newCards;\n};\n\nconst getRandomCards = () => {\n  const cards = getPlayingCards();\n  if (cards.length < GameOptions.countPair) return [];\n  const newCards = getNewCards(cards);\n  const shuffledCards = getShuffleCards([...newCards, ...newCards]);\n  return shuffledCards.map((card, index) => ({ ...card, id: index }));\n};\n\nexport default getRandomCards;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Modal from './Modal';\nimport './Result.scss';\n\nconst Result = ({\n  isWin, onClick,\n}) => (\n  <Modal open title=\"Your result\">\n    <p className={classNames('result', {\n      'result--is-loser': !isWin,\n    })}\n    >\n      {isWin ? 'Yeah! You won! 🎉' : \"Unfortunately you lost, you didn't have enough time 😟 Try again!\"}\n    </p>\n    <button\n      type=\"button\"\n      className=\"button\"\n      onClick={onClick}\n    >\n      Play again\n    </button>\n  </Modal>\n);\n\nResult.propTypes = {\n  isWin: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Result;\n","import React, { useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Result from '../components/Result';\nimport { resetGame } from '../actions';\nimport { GAME } from '../constants';\nimport getRandomCards from '../data/playing-cards';\n\nconst ResultConatiner = ({\n  remainingTime, visibleCounts, reset,\n}) => {\n  const history = useHistory();\n  const isWin = useMemo(() => !!remainingTime && !visibleCounts, [remainingTime, visibleCounts]);\n  const handleClick = useCallback(() => {\n    const cards = getRandomCards();\n    reset(cards);\n    history.push(GAME);\n  }, [history, reset]);\n  return (\n    <Result isWin={isWin} onClick={handleClick} />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  remainingTime: state.timer,\n  visibleCounts: state.cards.visibleCounts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  reset: (cards) => dispatch(resetGame(cards)),\n});\n\nResultConatiner.propTypes = {\n  remainingTime: PropTypes.number.isRequired,\n  visibleCounts: PropTypes.number.isRequired,\n  reset: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ResultConatiner);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { createStore } from 'redux';\nimport combineReducers from '../reducers';\nimport { receiveCards } from '../actions';\nimport GameContainer from './GameContainer';\nimport Intro from '../components/Intro';\nimport getRandomCards from '../data/playing-cards';\nimport { INDEX, GAME, RESULT } from '../constants';\nimport ResultContainer from './ResultContainer';\n\nconst store = createStore(combineReducers);\n\nconst cards = getRandomCards();\nstore.dispatch(receiveCards(cards));\n\nconst Routing = () => (\n  <HashRouter hashType=\"noslash\">\n    <main>\n      <Provider store={store}>\n        <Route exact path={INDEX} component={Intro} />\n        <Route path={GAME} component={GameContainer} />\n        <Route path={RESULT} component={ResultContainer} />\n      </Provider>\n    </main>\n  </HashRouter>\n);\n\nexport default Routing;\n","import React from 'react';\n\nconst Header = () => (\n  <header>\n    <h1>Find a pair</h1>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport Routing from './Routing';\nimport Header from '../components/Header';\n\nconst App = () => (\n  <>\n    <Header />\n    <Routing />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './containers/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}